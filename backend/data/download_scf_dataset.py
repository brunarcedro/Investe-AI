"""
Script para baixar e processar dados do Survey of Consumer Finances (SCF)
Federal Reserve - Dataset p√∫blico de finan√ßas de consumidores americanos

Fonte: https://www.federalreserve.gov/econres/scfindex.htm
"""

import pandas as pd
import numpy as np
import requests
import zipfile
import io
import os
from pathlib import Path

class SCFDownloader:
    """Classe para baixar e processar dados do SCF"""

    def __init__(self):
        self.base_url = "https://www.federalreserve.gov/econres/files"
        self.data_dir = Path(__file__).parent
        self.scf_raw_path = self.data_dir / "scf_raw_data.csv"

    def baixar_scf_2022(self):
        """
        Baixa o dataset SCF 2022 (vers√£o resumida - summary extract)

        O SCF disponibiliza diferentes formatos:
        - Summary Extract Public Data (formato mais acess√≠vel)
        - Full Public Data (mais completo, formato SAS/Stata)
        """
        print("üîÑ Baixando dados do SCF 2022...")

        # URL do Summary Extract (CSV format) - mais f√°cil de processar
        # Nota: O Federal Reserve disponibiliza os dados em formato SAS principalmente
        # Vamos usar uma abordagem alternativa com dados pr√©-processados

        print("‚ö†Ô∏è  O dataset SCF oficial vem em formato SAS/Stata.")
        print("üìä Usando dados de exemplo baseados na estrutura do SCF...")

        # Criar dados de exemplo baseados na estrutura real do SCF
        # Em produ√ß√£o, voc√™ baixaria o arquivo oficial e processaria com pandas/statsmodels
        return self._criar_exemplo_estrutura_scf()

    def _criar_exemplo_estrutura_scf(self):
        """
        Cria estrutura de exemplo baseada nas vari√°veis reais do SCF

        Vari√°veis principais do SCF que usaremos:
        - YY1: ID da fam√≠lia
        - AGE: Idade do respondente
        - INCOME: Renda familiar anual
        - NETWORTH: Patrim√¥nio l√≠quido
        - MARRIED: Estado civil (1=casado, 2=solteiro, etc)
        - KIDS: N√∫mero de crian√ßas
        - EDUC: N√≠vel educacional
        - RISK: Toler√¢ncia a risco (1-4 scale)
        - DEBT: D√≠vidas totais
        - LIQ: Ativos l√≠quidos
        - EQUITINC: Renda de a√ß√µes
        - FAMSTRUCT: Estrutura familiar
        """

        print("üìã Estrutura do SCF cont√©m as seguintes vari√°veis-chave:")
        variaveis_scf = {
            'YY1': 'ID da fam√≠lia',
            'AGE': 'Idade do respondente principal',
            'INCOME': 'Renda familiar anual total',
            'NETWORTH': 'Patrim√¥nio l√≠quido (ativos - d√≠vidas)',
            'ASSET': 'Total de ativos',
            'DEBT': 'Total de d√≠vidas',
            'LIQ': 'Ativos l√≠quidos (poupan√ßa, conta corrente)',
            'MARRIED': 'Estado civil',
            'KIDS': 'N√∫mero de crian√ßas',
            'EDUC': 'N√≠vel educacional (1-4: menos que high school at√© college+)',
            'RISK': 'Toler√¢ncia a risco financeiro (1-4)',
            'EQUITINC': 'Renda de investimentos em a√ß√µes',
            'NEQUITINC': 'Renda de investimentos n√£o-a√ß√µes',
            'FAMSTRUCT': 'Estrutura familiar',
            'HOUSECL': 'Classe de moradia',
            'OCCAT': 'Ocupa√ß√£o/categoria de trabalho',
            'INCOME_PERCENTILE': 'Percentil de renda'
        }

        for var, desc in variaveis_scf.items():
            print(f"  ‚Ä¢ {var}: {desc}")

        return variaveis_scf

    def download_scf_via_api(self):
        """
        M√©todo alternativo: alguns pesquisadores disponibilizam vers√µes processadas
        do SCF em formatos mais acess√≠veis
        """
        print("\nüí° INSTRU√á√ïES PARA BAIXAR O DATASET SCF OFICIAL:\n")
        print("1. Acesse: https://www.federalreserve.gov/econres/scfindex.htm")
        print("2. V√° em 'Download Survey Data'")
        print("3. Baixe o 'Summary Extract Public Data' (formato CSV ou Excel)")
        print("4. Ou use o pacote Python 'scfdata' para acesso direto")
        print("\nüì¶ Instala√ß√£o alternativa:")
        print("   pip install pandas-datareader")
        print("   pip install wbgapi  # World Bank API (alternativa)")

        return None

    def processar_scf_manual(self, scf_file_path):
        """
        Processa arquivo SCF baixado manualmente pelo usu√°rio

        Args:
            scf_file_path: Caminho para o arquivo SCF (CSV, Excel, ou SAS)
        """
        if not os.path.exists(scf_file_path):
            raise FileNotFoundError(f"Arquivo n√£o encontrado: {scf_file_path}")

        print(f"üìÇ Processando arquivo: {scf_file_path}")

        # Detectar formato do arquivo
        if scf_file_path.endswith('.csv'):
            df = pd.read_csv(scf_file_path)
        elif scf_file_path.endswith(('.xls', '.xlsx')):
            df = pd.read_excel(scf_file_path)
        elif scf_file_path.endswith('.dta'):  # Stata
            df = pd.read_stata(scf_file_path)
        elif scf_file_path.endswith('.sas7bdat'):  # SAS
            df = pd.read_sas(scf_file_path)
        else:
            raise ValueError("Formato de arquivo n√£o suportado")

        print(f"‚úÖ Dataset carregado: {len(df)} registros, {len(df.columns)} colunas")
        print(f"üìä Colunas dispon√≠veis: {list(df.columns)[:10]}...")

        return df


def main():
    """Fun√ß√£o principal para demonstra√ß√£o"""
    downloader = SCFDownloader()

    print("=" * 70)
    print("üè¶ SURVEY OF CONSUMER FINANCES (SCF) - DATASET DOWNLOADER")
    print("=" * 70)

    # Mostrar estrutura do SCF
    variaveis = downloader.baixar_scf_2022()

    print("\n" + "=" * 70)
    downloader.download_scf_via_api()
    print("=" * 70)

    print("\n‚úÖ Pr√≥ximo passo: Ap√≥s baixar o dataset oficial, execute:")
    print("   python etl_scf_to_features.py")


if __name__ == "__main__":
    main()
